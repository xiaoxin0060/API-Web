export default {
  // Common
  common: {
    confirm: 'Confirm',
    cancel: 'Cancel',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    search: 'Search',
    reset: 'Reset',
    submit: 'Submit',
    loading: 'Loading...',
    noData: 'No data available',
    success: 'Success',
    error: 'Error',
    warning: 'Warning',
    info: 'Info',
    retry: 'Retry',
    close: 'Close',
    back: 'Back',
    next: 'Next',
    previous: 'Previous',
    finish: 'Finish',
    copy: 'Copy',
    download: 'Download',
    upload: 'Upload',
    refresh: 'Refresh',
    clear: 'Clear',
    selectAll: 'Select All',
    operation: 'Operation',
    status: 'Status',
    createTime: 'Created At',
    updateTime: 'Updated At',
    description: 'Description',
    remark: 'Remark',
    total: 'Total {count} items',
  },

  // App
  app: {
    title: 'Xiaoxin API Platform',
    subtitle: 'Enterprise API Management & Testing Platform',
    copyright: 'Â© 2024 Xiaoxin API Platform All rights reserved.',
  },

  // Navigation
  nav: {
    home: 'Home',
    interfaces: 'API Docs',
    posts: 'Community',
    profile: 'Profile',
    admin: 'Admin',
    users: 'User Management',
    login: 'Login',
    logout: 'Logout',
    register: 'Register',
  },

  // Auth
  auth: {
    login: 'Login',
    register: 'Register',
    logout: 'Logout',
    loginTitle: 'Login to Xiaoxin API Platform',
    registerTitle: 'Register for Xiaoxin API Platform',
    username: 'Username',
    account: 'Account',
    password: 'Password',
    confirmPassword: 'Confirm Password',
    loginSuccess: 'Login successful',
    logoutSuccess: 'Logout successful',
    registerSuccess: 'Registration successful',
    accountRequired: 'Please enter account',
    passwordRequired: 'Please enter password',
    confirmPasswordRequired: 'Please confirm password',
    accountLength: 'Account length should be 4-20 characters',
    passwordLength: 'Password should be at least 6 characters',
    passwordNotMatch: 'Passwords do not match',
    loginFailed: 'Login failed',
    registerFailed: 'Registration failed',
    sessionExpired: 'Session expired, please login again',
    accessDenied: 'Access denied',
    goToLogin: 'Go to Login',
    goToRegister: 'Go to Register',
    hasAccount: 'Already have an account?',
    noAccount: "Don't have an account?",
  },

  // Interface
  interface: {
    title: 'Interface Management',
    list: 'Interface List',
    detail: 'Interface Detail',
    add: 'Add Interface',
    edit: 'Edit Interface',
    name: 'Interface Name',
    url: 'Interface URL',
    method: 'Request Method',
    category: 'Category',
    tags: 'Tags',
    status: 'Status',
    online: 'Online',
    offline: 'Offline',
    pending: 'Pending',
    draft: 'Draft',
    published: 'Published',
    invoke: 'Test Online',
    invokeSuccess: 'Invoke successful',
    invokeFailed: 'Invoke failed',
    documentation: 'Documentation',
    requestHeader: 'Request Header',
    responseHeader: 'Response Header',
    requestParams: 'Request Parameters',
    requestSchema: 'Request Schema',
    responseSchema: 'Response Schema',
    exampleRequest: 'Request Example',
    exampleResponse: 'Response Example',
    timeout: 'Timeout',
    retryCount: 'Retry Count',
    rateLimit: 'Rate Limit',
    price: 'Price',
    provider: 'Provider',
    authType: 'Auth Type',
    authConfig: 'Auth Config',
    version: 'Version',
    publishConfirm: 'Confirm to publish this interface?',
    offlineConfirm: 'Confirm to take this interface offline?',
    deleteConfirm: 'Confirm to delete this interface? This action cannot be undone.',
    publishSuccess: 'Interface published successfully',
    offlineSuccess: 'Interface taken offline successfully',
    deleteSuccess: 'Interface deleted successfully',
    statusOnline: 'Online',
    statusOffline: 'Offline',
    noQuota: 'Insufficient quota',
    quotaExhausted: 'Quota exhausted',
    callInterface: 'Call Interface',
    callResult: 'Call Result',
    callTime: 'Response Time',
    resultCopied: 'Result copied to clipboard',
  },

  // User
  user: {
    profile: 'Profile',
    userInfo: 'User Information',
    avatar: 'Avatar',
    nickname: 'Nickname',
    email: 'Email',
    phone: 'Phone',
    gender: 'Gender',
    male: 'Male',
    female: 'Female',
    unknown: 'Unknown',
    role: 'Role',
    admin: 'Administrator',
    normal: 'Normal User',
    aksk: 'AK/SK',
    accessKey: 'Access Key',
    secretKey: 'Secret Key',
    resetAkSk: 'Reset AK/SK',
    resetAkSkConfirm: 'Confirm to reset AK/SK? The old keys will be invalid immediately.',
    resetAkSkSuccess: 'AK/SK reset successfully',
    showSensitive: 'Show Sensitive Info',
    hideSensitive: 'Hide Sensitive Info',
    copied: 'Copied',
    copyFailed: 'Copy failed',
    quota: 'My Quota',
    totalQuota: 'Total Quota',
    usedQuota: 'Used Quota',
    remainingQuota: 'Remaining Quota',
  },

  // Post
  post: {
    title: 'Post Management',
    list: 'Post List',
    detail: 'Post Detail',
    add: 'Create Post',
    edit: 'Edit Post',
    content: 'Content',
    author: 'Author',
    publishTime: 'Published At',
    viewCount: 'Views',
    likeCount: 'Likes',
    status: 'Status',
    pending: 'Pending',
    approved: 'Approved',
    rejected: 'Rejected',
    deleteConfirm: 'Confirm to delete this post?',
    deleteSuccess: 'Post deleted successfully',
    publishSuccess: 'Post published successfully',
  },

  // Admin
  admin: {
    title: 'Admin Console',
    dashboard: 'Dashboard',
    userManage: 'User Management',
    interfaceManage: 'Interface Management',
    quotaManage: 'Quota Management',
    postManage: 'Post Management',
    settings: 'Settings',
    totalUsers: 'Total Users',
    totalInterfaces: 'Total Interfaces',
    todayInvocations: 'Today Invocations',
    successRate: 'Success Rate',
    addQuota: 'Add Quota',
    addQuotaConfirm: 'Confirm to add quota for user?',
    addQuotaSuccess: 'Quota added successfully',
  },

  // Validation
  validation: {
    required: 'This field is required',
    email: 'Please enter a valid email address',
    url: 'Please enter a valid URL',
    min: 'Minimum {min} characters required',
    max: 'Maximum {max} characters allowed',
    minValue: 'Minimum value is {min}',
    maxValue: 'Maximum value is {max}',
    integer: 'Please enter an integer',
    positive: 'Please enter a positive number',
    jsonFormat: 'Please enter valid JSON format',
    nameRequired: 'Please enter name',
    urlRequired: 'Please enter interface URL',
    methodRequired: 'Please select request method',
  },

  // Error
  error: {
    networkError: 'Network connection failed, please check and retry',
    serverError: 'Server error, please try again later',
    unauthorized: 'Unauthorized, please login first',
    forbidden: 'Access forbidden',
    notFound: 'Requested resource not found',
    timeout: 'Request timeout, please retry',
    unknown: 'Unknown error',
    offline: 'Currently offline, please check network connection',
    retry: 'Retry',
    goBack: 'Go Back',
    goHome: 'Go Home',
  },

  // Page
  page: {
    home: 'Home',
    interfaces: 'API Docs',
    posts: 'Community',
    profile: 'Profile',
    admin: 'Admin',
    login: 'Login',
    register: 'Register',
    notFound: 'Page Not Found',
  },
}
